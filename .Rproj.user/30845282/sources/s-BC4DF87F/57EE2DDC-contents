\name{volcano}
\alias{volcano}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Volcano Plot Comparing Two Groups of Data
}
\description{
Creates a volcano plot for the data provided showing up and downregulation of genes between the groups specified.
}
\usage{
volcano(data, groups, levels = NULL, is.log2 = TRUE, pval.cut = 0.05, FC.cut = 2, return.summary = FALSE, downreg.color = "green", upreg.color = "red", nosig.color = "gray", show.genes = NULL, point.size = 2, transparency = 1, legend.position = "right")
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{data}{
numeric data matrix with samples/observations in the columns and genes/variables in the rows
}
  \item{groups}{
The annotations for the samples in question. There are two options in how to specify this annotation. One option is to provide a string pointing to an annotation in the annotations dataframe stored in the params list object. The other option is to provide a vector the same length as the number of samples in the input data where the annotations of the vector correspond to the colnames of the data in that order.
}
  \item{levels}{
levels of the comparison. A character vector of length 2. The first item will be considered the baseline level and values in the volcano plot will reflect expression of samples in level 2 with respect to level 1. If input vector of groups (whether it be a custom vector or pointing to the annotations dataframe stored in the params list object) has more than 2 levels, data will be subset for the levels provided.
}
  \item{is.log2}{
logical: Is the data already in log2 space? If FALSE, will take adjust accordingly when calculating Fold Change
}
  \item{pval.cut}{
pvalue below which genes will be considered statistically significant
}
  \item{FC.cut}{
absolute value of the fold change threshold (will be converted to log2 space within the function), above which genes will be considered to have a significant fold change.
}
  \item{return.summary}{
logial: If true will return a summary of the results, see 'value' for more details
}
  \item{downreg.color}{
color for downregulated genes whole p values are below the pval.cut and whose fold changes are below -FC.cut
}
  \item{upreg.color}{
color for upregulated genes whole p values are below the pval.cut and whose fold changes are above FC.cut
}
  \item{nosig.color}{
color for genes with no significance according to the pval.cut and FC.cut thresholds specified
}
  \item{show.genes}{
a list of specific gene names that can optionally be added as text to the plot (see value and examples)
}
  \item{point.size}{
size of points to be plotted
}
  \item{transparency}{
transparency or alpha value of the points
}
  \item{legend.position}{
should the legend be shown and if so where should it be placed
}
}
\details{
A standard volcano plot where the pvalues between levels of groups are calculated using a ttest and the fold changes are calculated using the differences of the estimates
}
\value{
if return.summary == FALSE
  A ggplot object. Within the ggplot object are additional options that allow the user to add the text of gene names to the plot (see examples, these are specifically designed to be added outside the function itself for proper positioning). These options include all genes, significant genes, or a custom set of genes specified using show.genes. Additional layers can be added to the returned ggplot object to further customize theme and aesthetics.

if return.summary == TRUE
  A dataframe with genes in the rows and four columns

\item{'LFC'}{the log2 fold change(the x axis of the volcano plot)}
\item{'FoldChange'}{the fold change}
\item{'pvals'}{pvalues}
\item{'-log10pvals'}{-log10 of the p values (y axis of the volcano plot)}
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
~~Alison Moss~~
}
\note{
the returned ggplot object also contains the names of the genes for each point. If printing the names of the genes is desired, add '+ geom_text(aes(label=Gene))' at the end of the function argument. See \link[ggplot2]{geom_text} for more information on the position of the text sing nudge_x and nudge_y (see examples). Additionally, lines may be added to the plot using geom_hline and geom_vline (see examples)
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
For more information on customizing the returned ggplot object, please see ggplot2 helpfiles, specifically those related to setting the theme.

See \link[dataVisEasy]{params}, \link[dataVisEasy]{set_annotations}, and \link[dataVisEasy]{set_annot_cols} for more information on setting up annotations and associated colors.
}
\examples{

####Volcano Plot
volcano(data, "Sex")
volcano(data, "Cell_Type", levels = c("CV","FB"))
volcano(data, "Cell_Type", levels = c("CV","FB"), pval.cut = 0.1, FC.cut = 1.5, upreg.color = "yellow", downreg.color = "blue", nosig.color = "gray90")

###add things to ggplot object
volcano(data, "Cell_Type", levels = c("CV","FB")) + geom_text(aes(label=Gene),  nudge_x = 0.1, nudge_y = -.1)

volcano(data, "Cell_Type", levels = c("CV","FB")) + geom_text(aes(label=Sig.Genes),  nudge_x = 0.5, nudge_y = -.5)

##if show.genes is specified
volcano(data, "Cell_Type", levels = c("CV","FB")) + geom_text(aes(label=My.Genes),  nudge_x = 0.1, nudge_y = -.1)

##add lines
horiz.lines <- c(0.05)
vert.lines <- c(2,3)

volcano(data, "Cell_Type", levels = c("CV","FB")) + geom_hline(yintercept = c(-log10(horiz.lines))) + geom_vline(xintercept = c(log2(vert.lines), -log2(vert.lines)))


##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (data, groups, levels = NULL, is.log2 = TRUE, pval.cut = 0.05,
    FC.cut = 2, return.summary = FALSE, downreg.color = "green",
    upreg.color = "red", nosig.color = "gray")
{
    temp.annotations <- params$annotations
    if (groups \%in\% colnames(temp.annotations)) {
        if (sum(colnames(data) \%notin\% rownames(temp.annotations)) !=
            0) {
            stop("colnames of input data do not match rownames of annotations, cannot link annotations to data")
        }
        temp.annotations <- temp.annotations[match(colnames(data),
            rownames(temp.annotations)), , drop = FALSE]
        groupings <- as.factor(temp.annotations[, groups])
        if (is.null(levels) == TRUE) {
            levels <- levels(groupings)
        }
        G1 <- data[, which(groupings == levels[1])]
        G2 <- data[, which(groupings == levels[2])]
    }
    else {
        G1 <- data[, which(groups == levels[1])]
        G2 <- data[, which(groups == levels[2])]
    }
    pvals <- NULL
    log2foldchanges <- NULL
    for (i in 1:nrow(G1)) {
        ttest <- t.test(G1[i, ], G2[i, ])
        pvals <- c(pvals, ttest$p.value)
        if (is.log2 == TRUE) {
            log2foldch <- ttest$estimate[2] - ttest$estimate[1]
        }
        else {
            log2foldch <- log2(ttest$estimate[2]/ttest$estimate[1])
        }
        log2foldchanges <- c(log2foldchanges, log2foldch)
    }
    names(pvals) <- rownames(data)
    names(log2foldchanges) <- rownames(data)
    volcano.summary <- data.frame(LFC = log2foldchanges, FoldChange = 2^(log2foldchanges),
        pvals, `-log10pvals` = -log10(pvals))
    group <- rep("No Sig", nrow(volcano.summary))
    group[which(volcano.summary$pvals < pval.cut & (volcano.summary$LFC) >
        log2(FC.cut))] <- "Upregulated"
    group[which(volcano.summary$pvals < pval.cut & (volcano.summary$LFC) <
        -log2(FC.cut))] <- "Downregulated"
    mat <- cbind(volcano.summary, Color = group, Gene = rownames(volcano.summary))
    p <- ggplot(mat, aes(x = LFC, y = -log10(pvals), col = Color)) +
        geom_point(size = 2) + theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"), panel.border = element_rect(color = "black",
            fill = NA), strip.background = element_blank(), strip.text = element_text(size = 25),
        axis.text.x = element_text(size = 15), axis.text.y = element_text(size = 15),
        axis.title = element_text(size = 20), plot.title = element_text(size = 15,
            hjust = 0.5)) + xlab("Log2 Fold Change") + ylab("-log10(Pvalue)") +
        scale_color_manual(name = paste(paste0("FC.cut = ", FC.cut),
            paste0("Pval.cut = ", pval.cut), sep = "\n"), values = c(Downregulated = downreg.color,
            Upregulated = upreg.color, `No Sig` = nosig.color)) +
        ggtitle(paste("-log10(pvalue) vs. log2(Fold Change) for",
            levels[2], "over", levels[1]))
    if (return.summary == FALSE) {
        return(p)
    }
    if (return.summary == TRUE) {
        return(volcano.summary)
    }
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
