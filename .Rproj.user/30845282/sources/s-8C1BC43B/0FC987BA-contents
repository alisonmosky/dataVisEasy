library(rgl)
library(RColorBrewer)
library(scales)

####Load Necessary Functions####
myColorRamp4 <- function(colors, values) {
  out <- rep(rgb(0,0,0),length(values))
  for(i in 1:length(values)){
    if(is.na(values[i])){
    } else{
      if (values[i]<median(values,na.rm=T)-0.75*mad(values,na.rm=T)){
        v <- (values[i] - min(values,na.rm=T))/diff(range(values,na.rm=T))
        x <- colorRamp(colors[1:2])(v)
        out[i] <- rgb(x[,1], x[,2], x[,3], maxColorValue = 255)}
      
      if (values[i]>median(values,na.rm=T)-0.75*mad(values,na.rm=T) & values[i]<0){
        v <- (values[i] - min(values,na.rm=T))/diff(range(values,na.rm=T))
        x <- colorRamp(colors[2:3])(v)
        out[i] <- rgb(x[,1], x[,2], x[,3], maxColorValue = 255)}
      
      if (values[i]<median(values,na.rm=T)+0.75*mad(values,na.rm=T) & values[i]>0){
        v <- (values[i] - min(values,na.rm=T))/diff(range(values,na.rm=T))
        x <- colorRamp(colors[3:4])(v)
        out[i] <- rgb(x[,1], x[,2], x[,3], maxColorValue = 255)}
      
      if (values[i]>median(values,na.rm=T)+0.75*mad(values,na.rm=T)){
        v <- (values[i] - min(values,na.rm=T))/diff(range(values,na.rm=T))
        x <- colorRamp(colors[4:5])(v)
        out[i] <- rgb(x[,1], x[,2], x[,3], maxColorValue = 255)}
    }
  }
  
  View3D <- function(
    X, #vector of coordinates for X
    Y, #vector of coordinates for Y
    Z, #vector of coordinates for Z
    colors, ##vector of colors 
    main= NULL,
    box=FALSE, 
    axes=FALSE,
    tick=FALSE,
    labels=FALSE,
    x.lab ="",
    y.lab="",
    z.lab="",
    size= 2, ##can overwrite the size of the points 
    axis.color="grey", ##color of axis
    useDefault = FALSE, #can be overwritten, use if don't know usermatrix, zoom, windowrect
    zoom=0.75, #zoom, can be overwritten
    userMatrix=matrix(c( -0.999968529,-0.001579670, 0.007774456,0,0.007591867,0.093966849,0.995546341,0,-0.001486613,0.995586455,-0.093832962,0,0,0,0,1),4,4), #can be overwritten, should write function to get
    windowRect = c(380,103,1006,645) ##same as above 
  ){
    # gene<-dat$Dbh
    # gene1<-colnames(dat)[which(dat[21,]==gene[21])]
    # 
    # 
    # cols <- myColorRamp4(c("blue","lightblue","gray","indianred","firebrick"), gene) #Change gene name here
    if(useDefault==FALSE){
      open3d(zoom = 0.75, userMatrix = userMatrix, windowRect=windowRect)
      plot3d(x=X,y=Y,z=Z,col=colors, type="s", size=size, box=box, axes=axes,xlab=x.lab,ylab=y.lab, zlab=z.lab)
      axes3d(edge="Z+",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      axes3d(edge="X-",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      axes3d(edge="Y+",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      bgplot3d({plot.new();title(main = main, line = 0)})
    }
    
    if(useDefault==TRUE){
      open3d()
      plot3d(x=X,y=Y,z=Z,col=colors, type="s", size=size, box=box, axes=axes,xlab=x.lab,ylab=y.lab, zlab=z.lab)
      axes3d(edge="Z+",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      axes3d(edge="X-",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      axes3d(edge="Y+",tick=tick,labels=labels,col=axis.color,lwd=2,alpha=0.7)
      bgplot3d({plot.new();title(main = main, line = 0)}) 
    }
    
  }
  
  return(out)
}

###Import Data####

prefix <- "D://"

#Biomark for a gene or other annotation
##need annotations and data first 
norm <- as.matrix(read.table(paste0(prefix, "/Dropbox (SBG)/SPARC-Data-Acquisition/All_RAGP_Analysis/All_RAGP_negddct.txt"), sep="\t", header=T));colnames(norm) <- gsub("\\.","-",colnames(norm))
all.annots <- read.table(paste0(prefix,"/Dropbox (SBG)/SPARC-Data-Acquisition/All_RAGP_Analysis/Annotations_PR1534_PR1643_PR1705_PR1729_CellStates_New.txt"), sep="\t", header=T)  ##Rcut of 0.45
#pull out 1643
PR16.norm <- norm[,grep("PR1643", colnames(norm))]
PR16.annots <- all.annots[which(all.annots$Animal=="PR1643"),]
#pull out coordinates 
all.coords <- read.table(paste0(prefix,"/Dropbox (SBG)/SPARC-Data-Acquisition/Pig 1643/PR1643/PR1643_Samples_coordinates_20200312.txt"), sep="\t", header=T); all.coords$Sample_ID <- gsub("PR1543","PR1643",all.coords$Sample_ID)
biomark.samples <- colnames(PR16.norm)
biomark.coords <- all.coords[which(all.coords$Sample_ID %in% biomark.samples),]
##make sure coordinates are in the right order
PR16.coords <- biomark.coords[match(colnames(PR16.norm),biomark.coords$Sample_ID),]

#################
###View in 3D####
#################

color.by<-"Sst"                                                                   ##########Change Gene Name Here


genedat<-PR16.norm[which(rownames(PR16.norm)==color.by),]
cols <- myColorRamp4(c("blue","lightblue","gray","indianred","firebrick"), genedat) 

View3D(X=PR16.coords$X,Y=PR16.coords$Y, Z=PR16.coords$Z,cols, main=paste(color.by))

